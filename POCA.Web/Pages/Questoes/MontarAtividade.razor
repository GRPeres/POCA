@page "/montar-atividade"
@inject POCA.Web.Services.QuestoesAPI QuestoesAPI
@inject ISnackbar Snackbar
@inject NavigationManager Navigation
@inject AtividadeState AtividadeState

<PageTitle>Montar Atividade</PageTitle>

<MudContainer MaxWidth="MaxWidth.Large" Class="py-4">
    <MudText Typo="Typo.h5" Class="mb-4">Montar Atividade Manualmente</MudText>

    <!-- Filtros -->
    <MudPaper Class="pa-4 mb-4" Elevation="1">
        <div class="d-flex align-center flex-wrap gap-3">
            <MudTextField @bind-Value="_searchString"
                          Placeholder="Pesquisar enunciado ou tema..."
                          Adornment="Adornment.Start"
                          AdornmentIcon="@Icons.Material.Filled.Search"
                          Immediate="true"
                          Variant="Variant.Outlined"
                          Style="flex-grow: 1;" />

            <MudSelect @bind-Value="_selectedDificuldade"
                       Label="Dificuldade"
                       Variant="Variant.Outlined"
                       Style="min-width: 150px;">
                <MudSelectItem Value="@("Fácil")">Fácil</MudSelectItem>
                <MudSelectItem Value="@("Média")">Média</MudSelectItem>
                <MudSelectItem Value="@("Difícil")">Difícil</MudSelectItem>
            </MudSelect>

            <MudSelect @bind-Value="_selectedTema"
                       Label="Tema"
                       Variant="Variant.Outlined"
                       Style="min-width: 150px;">
                @foreach (var tema in _temasUnicos)
                {
                    <MudSelectItem Value="@tema">@tema</MudSelectItem>
                }
            </MudSelect>
        </div>
    </MudPaper>

    <!-- Tabela de Questões -->
    <MudTable Items="@QuestoesFiltradas" Dense="true" Hover="true" Bordered="true">
        <HeaderContent>
            <MudTh>Selecionar</MudTh>
            <MudTh>Enunciado</MudTh>
            <MudTh>Dificuldade</MudTh>
            <MudTh>Tema</MudTh>
        </HeaderContent>
        <RowTemplate Context="q">
            <MudTd>
                <MudCheckBox @bind-Checked="_selectedQuestoesLookup[q.IdQuestao]" T="string" />
            </MudTd>
            <MudTd>@q.EnunciadoQuestao</MudTd>
            <MudTd>@q.DificuldadeQuestao</MudTd>
            <MudTd>@q.TemaQuestao</MudTd>
        </RowTemplate>
    </MudTable>

    <MudDivider Class="my-4" />

    <MudButton Color="Color.Primary"
               Disabled="@(!_selectedQuestoes.Any())"
               OnClick="IrParaVisualizar">
        Visualizar Atividade
    </MudButton>
</MudContainer>

@code {
    private List<QuestaoResponse> _questoes = new();
    private string _searchString = "";
    private string _selectedDificuldade = "";
    private string _selectedTema = "";
    private List<string> _temasUnicos = new();
    private Dictionary<int, bool> _selectedQuestoesLookup = new();

    private IEnumerable<QuestaoResponse> QuestoesFiltradas =>
        _questoes
            .Where(q => string.IsNullOrWhiteSpace(_searchString) ||
                        q.EnunciadoQuestao.Contains(_searchString, StringComparison.OrdinalIgnoreCase) ||
                        q.TemaQuestao.Contains(_searchString, StringComparison.OrdinalIgnoreCase))
            .Where(q => string.IsNullOrEmpty(_selectedDificuldade) || q.DificuldadeQuestao == _selectedDificuldade)
            .Where(q => string.IsNullOrEmpty(_selectedTema) || q.TemaQuestao == _selectedTema);

    private IEnumerable<QuestaoResponse> _selectedQuestoes =>
        _questoes.Where(q => _selectedQuestoesLookup.TryGetValue(q.IdQuestao, out var selected) && selected);

    protected override async Task OnInitializedAsync()
    {
        _questoes = (await QuestoesAPI.GetQuestoesAsync())?.ToList() ?? new();
        _temasUnicos = _questoes.Select(q => q.TemaQuestao).Distinct().ToList();
        _selectedQuestoesLookup = _questoes.ToDictionary(q => q.IdQuestao, q => false);
    }

    private void IrParaVisualizar()
    {
        AtividadeState.SetQuestoes(_selectedQuestoes.ToList());
        Navigation.NavigateTo("/atividade");
    }
}