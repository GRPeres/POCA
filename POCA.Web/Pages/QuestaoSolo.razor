@page "/questao/{id:int}"
@inject POCA.Web.Services.QuestoesAPI QuestoesAPI
@inject ISnackbar Snackbar

<MudContainer MaxWidth="MaxWidth.Medium" Class="py-6">
    @if (questao == null)
    {
        <MudPaper Elevation="2" Class="pa-8 d-flex justify-center align-center" style="height: 300px;">
            <MudProgressCircular Indeterminate="true" Color="Color.Primary" Size="Size.Large" />
        </MudPaper>
    }
    else
    {
        <MudPaper Elevation="4" Class="pa-6 rounded-lg">
            <!-- Header with question -->
            <div class="d-flex align-center mb-4">
                <MudIcon Icon="@Icons.Material.Filled.HelpOutline" Size="Size.Large" Color="Color.Primary" Class="mr-3" />
                <MudText Typo="Typo.h5" Class="mb-0">@questao.EnunciadoQuestao</MudText>
            </div>

            <!-- Metadata chips - now in a compact row -->
            <div class="d-flex flex-wrap gap-2 mb-4">
                <MudChip T="string" Color="Color.Secondary" Variant="Variant.Outlined" 
                        StartIcon="@Icons.Material.Filled.Category" Class="px-3">
                    <MudText Typo="Typo.caption">@questao.TemaQuestao</MudText>
                </MudChip>
                <MudChip T="string" Color="@GetDifficultyColor(questao.DificuldadeQuestao)" 
                        Variant="Variant.Outlined" StartIcon="@Icons.Material.Filled.StarHalf" Class="px-3">
                    <MudText Typo="Typo.caption">@questao.DificuldadeQuestao</MudText>
                </MudChip>
            </div>

            <MudDivider Class="my-4" />

            <!-- Correct Answer Section -->
            <MudPaper Elevation="1" Class="pa-4 mb-4 rounded-lg" Style="border-left: 4px solid var(--mud-palette-success);">
                <div class="d-flex align-center mb-2">
                    <MudIcon Icon="@Icons.Material.Filled.CheckCircle" Color="Color.Success" Class="mr-2" />
                    <MudText Typo="Typo.subtitle1" Color="Color.Success">Resposta Correta</MudText>
                </div>
                <MudPaper Elevation="0" Class="pa-3 rounded" Style="background-color: rgba(var(--mud-palette-success-rgb), 0.1);">
                    <MudText>@questao.RespostaCertaQuestao</MudText>
                </MudPaper>
            </MudPaper>

            <!-- Incorrect Answers Section -->
            <MudPaper Elevation="1" Class="pa-4 rounded-lg" Style="border-left: 4px solid var(--mud-palette-error);">
                <div class="d-flex align-center mb-2">
                    <MudIcon Icon="@Icons.Material.Filled.ErrorOutline" Color="Color.Error" Class="mr-2" />
                    <MudText Typo="Typo.subtitle1" Color="Color.Error">Respostas Incorretas</MudText>
                </div>
                
                <MudList T="string" Dense="true" Class="py-0">
                    <MudListItem Class="px-0">
                        <MudPaper Elevation="0" Class="pa-3 mb-2 rounded" Style="background-color: rgba(var(--mud-palette-error-rgb), 0.1); width: 100%;">
                            <div class="d-flex align-center">
                                <MudIcon Icon="@Icons.Material.Filled.Clear" Color="Color.Error" Size="Size.Small" Class="mr-2" />
                                <MudText>@questao.RespostaErrada1Questao</MudText>
                            </div>
                        </MudPaper>
                    </MudListItem>
                    <MudListItem Class="px-0">
                        <MudPaper Elevation="0" Class="pa-3 mb-2 rounded" Style="background-color: rgba(var(--mud-palette-error-rgb), 0.1); width: 100%;">
                            <div class="d-flex align-center">
                                <MudIcon Icon="@Icons.Material.Filled.Clear" Color="Color.Error" Size="Size.Small" Class="mr-2" />
                                <MudText>@questao.RespostaErrada2Questao</MudText>
                            </div>
                        </MudPaper>
                    </MudListItem>
                    <MudListItem Class="px-0">
                        <MudPaper Elevation="0" Class="pa-3 rounded" Style="background-color: rgba(var(--mud-palette-error-rgb), 0.1); width: 100%;">
                            <div class="d-flex align-center">
                                <MudIcon Icon="@Icons.Material.Filled.Clear" Color="Color.Error" Size="Size.Small" Class="mr-2" />
                                <MudText>@questao.RespostaErrada3Questao</MudText>
                            </div>
                        </MudPaper>
                    </MudListItem>
                </MudList>
            </MudPaper>

            <!-- Action Buttons -->
            <MudDivider Class="my-6" />
            <div class="d-flex justify-space-between">
                <MudButton Variant="Variant.Text" 
                          Color="Color.Primary" 
                          Href="/questoes" 
                          StartIcon="@Icons.Material.Filled.ArrowBack">
                    Voltar
                </MudButton>
                <div>
                    <MudButton Variant="Variant.Outlined" 
                              Color="Color.Secondary" 
                              Href="@($"/editar-questao/{questao.IdQuestao}")"
                              StartIcon="@Icons.Material.Filled.Edit"
                              Class="mr-2">
                        Editar
                    </MudButton>
                    <MudButton Variant="Variant.Filled" 
                              Color="Color.Primary" 
                              Href="/adicionar-questao"
                              StartIcon="@Icons.Material.Filled.Add">
                        Nova Questão
                    </MudButton>
                </div>
            </div>
        </MudPaper>
    }
</MudContainer>

@code {
    [Parameter]
    public int id { get; set; }

    private QuestaoResponse? questao;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            questao = await QuestoesAPI.GetQuestaoByIdAsync(id);
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Erro ao carregar questão: {ex.Message}", Severity.Error);
        }
    }

    private Color GetDifficultyColor(string difficulty) =>
        difficulty switch
        {
            "Fácil" => Color.Success,
            "Média" => Color.Warning,
            "Difícil" => Color.Error,
            _ => Color.Default
        };
}