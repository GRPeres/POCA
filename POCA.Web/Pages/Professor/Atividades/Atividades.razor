@page "/atividades"
@using POCA.Web.Services.APIs
@inject AtividadesAPI AtividadesAPI
@inject QuestoesAPI QuestoesAPI
@inject MateriasAPI MateriasAPI
@inject ISnackbar Snackbar
@inject NavigationManager Navigation

<MudContainer MaxWidth="MaxWidth.Large" Class="py-4">
    <!-- Page Header with Action Button -->
    <div class="d-flex align-center justify-space-between mb-6">
        <MudText Typo="Typo.h4" Class="mb-0">Lista de Atividades</MudText>
        <MudButton Color="Color.Primary"
                   Variant="Variant.Filled"
                   StartIcon="@Icons.Material.Filled.Add"
                   Href="/adicionar-atividade"
                   Size="Size.Small">
            Nova Atividade
        </MudButton>
    </div>

    <!-- Search Bar -->
    <MudPaper Class="pa-4 mb-4" Elevation="1">
        <div class="d-flex align-center">
            <MudTextField @bind-Value="_searchString"
                          Placeholder="Pesquisar atividades..."
                          Variant="Variant.Outlined"
                          AdornmentIcon="@Icons.Material.Filled.Search"
                          Adornment="Adornment.Start"
                          Immediate="true"
                          Style="flex-grow: 1;" />

            <MudTooltip Text="Limpar filtro">
                <MudIconButton Icon="@Icons.Material.Filled.Clear"
                               Color="Color.Primary"
                               OnClick="ClearFilters"
                               Class="ml-1" />
            </MudTooltip>
        </div>
    </MudPaper>

    <!-- Activities Table -->
    <MudPaper Elevation="2" Class="overflow-hidden">
        <MudTable Items="@FilteredActivities"
                  Dense="true"
                  Hover="true"
                  Striped="false"
                  Bordered="true"
                  Loading="@_isLoading">
            <ToolBarContent>
                <MudText Typo="Typo.body2" Class="ml-2">
                    Total: @FilteredActivities.Count() atividades
                </MudText>
                <MudSpacer />
                <MudButton Variant="Variant.Text"
                           Color="Color.Primary"
                           Size="Size.Small"
                           StartIcon="@Icons.Material.Filled.Refresh"
                           OnClick="RefreshData">
                    Atualizar
                </MudButton>
            </ToolBarContent>

            <HeaderContent>
                <MudTh>ID</MudTh>
                <MudTh>Nome</MudTh>
                <MudTh>Questões Associadas</MudTh>
                <MudTh Style="width: 160px;">Ações</MudTh>
            </HeaderContent>

            <RowTemplate Context="atividade">
                <MudTd>@atividade.IdAtividade</MudTd>
                <MudTd Style="max-width: 400px; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;">
                    @atividade.NomeAtividade
                </MudTd>
                <MudTd>
                    @if (atividade.TbQuestoesIdQuestaos?.Count() > 0)
                    {
                        <div class="d-flex flex-wrap gap-1">
                            @foreach (var questaoId in atividade.TbQuestoesIdQuestaos)
                            {
                                <MudButton Variant="Variant.Outlined"
                                           Color="Color.Primary"
                                           Size="Size.Small"
                                           Href="@($"/questao/{questaoId}")"
                                           Class="px-2">
                                    Q-@questaoId
                                </MudButton>
                            }
                        </div>
                    }
                    else
                    {
                        <MudText Typo="Typo.body2" Color="Color.Transparent">Nenhuma questão associada</MudText>
                    }
                </MudTd>
                <MudTd>
                    <div class="d-flex">
                        <MudTooltip Text="Visualizar">
                            <MudIconButton Icon="@Icons.Material.Filled.Visibility"
                                           Color="Color.Primary"
                                           Size="Size.Small"
                                           Href="@($"/atividade/{atividade.IdAtividade}")" />
                        </MudTooltip>

                        <MudTooltip Text="Editar">
                            <MudIconButton Icon="@Icons.Material.Filled.Edit"
                                           Color="Color.Secondary"
                                           Size="Size.Small"
                                           Href="@($"/editar-atividade/{atividade.IdAtividade}")"
                                           Class="ml-2" />
                        </MudTooltip>

                        <MudTooltip Text="Excluir">
                            <MudIconButton Icon="@Icons.Material.Filled.Delete"
                                           Color="Color.Error"
                                           Size="Size.Small"
                                           OnClick="@(() => OpenDeleteDialog(atividade.IdAtividade))"
                                           Class="ml-2" />
                        </MudTooltip>
                    </div>
                </MudTd>
            </RowTemplate>

            <PagerContent>
                <MudTablePager PageSizeOptions="@(new[] {10, 25, 50})" />
            </PagerContent>
        </MudTable>
    </MudPaper>
</MudContainer>

<!-- Delete Confirmation Dialog -->
<MudDialog @ref="deleteDialog" MaxWidth="MaxWidth.ExtraSmall">
    <TitleContent>
        <MudText Typo="Typo.h6">Confirmar Exclusão</MudText>
    </TitleContent>
    <DialogContent>
        <MudText>Deseja realmente excluir esta atividade?</MudText>
        <MudText Typo="Typo.body2" Color="Color.Error">Esta ação não pode ser desfeita.</MudText>
    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Text" OnClick="() => deleteDialog.CloseAsync()">Cancelar</MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Error" OnClick="ConfirmDelete">Excluir</MudButton>
    </DialogActions>
</MudDialog>

@code {
    private List<AtividadeResponse> _atividades = new();
    private bool _isLoading = true;
    private string _searchString = "";
    private MudDialog deleteDialog;
    private int _activityToDeleteId;

    protected override async Task OnInitializedAsync()
    {
        await LoadActivities();
    }

    private async Task LoadActivities()
    {
        _isLoading = true;
        try
        {
            var response = await AtividadesAPI.GetAtividadesAsync();
            _atividades = response?.ToList() ?? new();
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Erro ao carregar atividades: {ex.Message}", Severity.Error);
        }
        finally
        {
            _isLoading = false;
            StateHasChanged();
        }
    }

    private async Task RefreshData()
    {
        await LoadActivities();
    }

    private IEnumerable<AtividadeResponse> FilteredActivities => _atividades
        .Where(a => string.IsNullOrWhiteSpace(_searchString) ||
                    a.NomeAtividade.Contains(_searchString, StringComparison.OrdinalIgnoreCase) ||
                    a.IdAtividade.ToString().Contains(_searchString))
        .ToList();

    private void ClearFilters()
    {
        _searchString = "";
    }

    private void OpenDeleteDialog(int activityId)
    {
        _activityToDeleteId = activityId;
        deleteDialog.ShowAsync();
    }

    private async Task ConfirmDelete()
    {
        try
        {
            await AtividadesAPI.DeleteAtividadeAsync(_activityToDeleteId);
            Snackbar.Add("Atividade excluída com sucesso!", Severity.Success);
            await LoadActivities();
            await deleteDialog.CloseAsync();
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Erro ao excluir questão: {ex.Message}", Severity.Error);
            await deleteDialog.CloseAsync();
        }
    }
}