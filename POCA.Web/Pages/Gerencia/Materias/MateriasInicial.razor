@page "/materias-inicial"
@using MudBlazor
@using POCA.Web
@inject UserSessionService UserSession
@inject NavigationManager NavigationManager
@inject POCA.Web.Services.APIs.AlunosAPI AlunosAPI
@inject POCA.Web.Services.APIs.ProfessoresAPI ProfessoresAPI
@inject HttpClient Http

<MudLayout>
    <!-- Cabeçalho simplificado -->
    <MudAppBar Elevation="1">
        <MudAppBarSpacer />
        <MudIconButton Icon="@Icons.Material.Filled.School" Color="Color.Primary" Size="Size.Large" />
        <MudText Typo="Typo.h6" Class="ml-2">Ambiente de Matérias</MudText>
        <MudAppBarSpacer />
        <MudNavLink Href="/" Match="NavLinkMatch.All">Página inicial</MudNavLink>
    </MudAppBar>

    <!-- Conteúdo principal -->
    <MudMainContent>
        @if (UserSession.IsLoggedIn)
        {
            <!-- Boas-vindas -->
            <MudPaper Elevation="1" Class="pa-4 ma-4" Style="background-color: #008000; color: white;">
                <MudText>Você está logado como @(UserSession.CurrentUser.IsProfessor ? "Professor" : "Aluno")</MudText>
            </MudPaper>

            <!-- Lista de Matérias -->
            <MudPaper Elevation="1" Class="pa-4 ma-4">
                <MudText Typo="Typo.h5" Class="mb-4">📚 @(UserSession.CurrentUser.IsProfessor ? "Matérias que você leciona" : "Minhas Matérias")</MudText>
                
                @if (isLoading)
                {
                    <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
                }
                else if (materias == null || !materias.Any())
                {
                    <MudText>Nenhuma matéria encontrada.</MudText>
                }
                else
                {
                    <MudList T="string">
                        @foreach (var materia in materias)
                        {
                            <MudListItem 
                                OnClick="@(() => NavigateToMateria(materia.IdMateria))"
                                Text="@materia.NomeMateria"
                                Icon="@Icons.Material.Filled.Book" />
                        }
                    </MudList>
                }
            </MudPaper>
        }
        else
        {
            <MudPaper Elevation="1" Class="pa-4 ma-4 text-center">
                <MudText Typo="Typo.h6" Class="mb-4">Você não está logado</MudText>
                <MudButton Variant="Variant.Filled" Color="Color.Primary" Href="/login">Fazer Login</MudButton>
            </MudPaper>
        }
    </MudMainContent>
</MudLayout>

@code {
    private bool isLoading = true;
    private List<MateriaResponse> materias = new List<MateriaResponse>();

    protected override async Task OnInitializedAsync()
    {
        if (UserSession.IsLoggedIn)
        {
            await CarregarMaterias();
        }
    }

    private async Task CarregarMaterias()
    {
        isLoading = true;
        StateHasChanged();

        try
        {
            if (UserSession.CurrentUser.IsProfessor && UserSession.CurrentUser.IdProfessor.HasValue)
            {
                // Para professores, convertemos explicitamente ICollection para List
                var materiasResponse = await Http.GetFromJsonAsync<ICollection<MateriaResponse>>("materias");
                materias = materiasResponse?.ToList() ?? new List<MateriaResponse>();
            }
            else if (!UserSession.CurrentUser.IsProfessor && UserSession.CurrentUser.IdAluno.HasValue)
            {
                // Para alunos, convertemos explicitamente ICollection para List
                var materiasAluno = await AlunosAPI.GetMateriasByAlunoAsync(UserSession.CurrentUser.IdAluno.Value);
                materias = materiasAluno?.ToList() ?? new List<MateriaResponse>();
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Erro ao carregar matérias: {ex.Message}");
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }

    private void NavigateToMateria(int materiaId)
    {
        NavigationManager.NavigateTo($"/materia/{materiaId}");
    }
}