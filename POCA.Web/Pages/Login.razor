@page "/login"
@using MudBlazor
@using POCA.Web
@using POCA.Web.Utils
@inject POCA.Web.Services.AlunosAPI AlunosAPI
@inject UserSessionService UserSession
@inject NavigationManager NavigationManager
@inject ISnackbar Snackbar

<h1>Página de Login</h1>

@if (!UserSession.IsLoggedIn)
{
    @if (LoginFalha)
    {
        <MudAlert>Erro ao fazer login, login ou senha errado</MudAlert>
    }

    <MudTextField @bind-Value="usuario.User" Label="Usuário" Variant="Variant.Filled" />
    <MudTextField @bind-Value="usuario.Senha" Label="Senha" Variant="Variant.Filled" InputType="InputType.Password" />
    <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="mt-4" OnClick="EfetuarLogin">Entrar</MudButton>
}else
{
    <MudText>Você já está logado</MudText>
    <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="mt-4" OnClick="Voltar">Voltar</MudButton>
}

@code {
    private Usuario usuario = new Usuario();
    private bool LoginSucesso = false;
    private bool LoginFalha = false;

    private class Usuario
    {
        public string User { get; set; }
        public string Senha { get; set; }
    }

    private async Task EfetuarLogin()
    {
        if (usuario.User != "" && usuario.Senha != "")
        {
            var login = await AlunosAPI.CheckAlunosAsync(usuario.User, usuario.Senha);

            if (login != null)
            {
                await UserSession.Login(login);
                Snackbar.Add("Login bem-sucedido!", Severity.Success);
                NavigationManager.NavigateTo("/");
            }
            else
            {
                LoginFalha = true;
            }
        }
        else
        {
            Snackbar.Add("Coloque um login ou senha", Severity.Info);
        }
    }

    private void Voltar()
    {
        NavigationManager.NavigateTo("/");
    }
}