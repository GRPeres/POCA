@page "/importar-questoes"
@inject QuestoesAPI QuestoesService
@inject NavigationManager NavManager
@inject ISnackbar Snackbar
@inject IJSRuntime JS

<MudContainer MaxWidth="MaxWidth.Medium" Class="py-6">
    <MudPaper Elevation="4" Class="pa-6 rounded-lg">
        <div class="d-flex align-center mb-4">
            <MudIconButton Icon="@Icons.Material.Filled.ArrowBack"
                           Color="Color.Primary"
                           Variant="Variant.Text"
                           Href="/questoes"
                           Class="mr-2" />
        </div>

                           Color="Color.Primary"
                </MudButton>
                <InputFile @ref="_fileInput"
                           style="display: none;"
                           accept=".csv"
                           OnChange="OnFileSelected" />
            </div>
        </MudPaper>

        @if (_isProcessing)
        {
            <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="mb-4" />
        }

        @if (_responseMessage != null)
        {
                @_responseMessage.ReasonPhrase
            </MudAlert>
        }
    </MudPaper>
</MudContainer>

@code {
    private InputFile? _fileInput;
    private HttpResponseMessage? _responseMessage;
    private bool _isProcessing = false;


    {
        _isProcessing = true;
        _responseMessage = null;

        try
        {
            var file = e.File;
            await ProcessFile(file);
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Erro ao processar arquivo: {ex.Message}", Severity.Error);
        }
        finally
        {
            _isProcessing = false;
        }
    }

    {
        {
        {
        }
            });


        if (_responseMessage.IsSuccessStatusCode)
        {
            NavManager.NavigateTo("/questoes");
        }
            else
            {
                Snackbar.Add($"Erro: {_responseMessage.ReasonPhrase}", Severity.Error);
            }
    }
                    {
            }
        }

    }
}